name: Build PD3AudioModder

on:
  release:
    types:
      - published  # Trigger build when a release is published

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Scoop
        run: |
          Invoke-WebRequest -useb get.scoop.sh | Invoke-Expression
          echo "$HOME\scoop\shims" >> $env:GITHUB_PATH

      - name: Install NSIS via Scoop
        run: |
          scoop bucket add extras
          scoop install extras/nsis

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore ./src/PD3AudioModder.csproj

      - name: Build PD3AudioModder
        run: |
          dotnet publish ./src/PD3AudioModder.csproj -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:PublishTrimmed=true --output ./output

      - name: Add version.txt to output
        run: |
          echo "${{ github.event.release.tag_name }}" > ./output/version.txt

      - name: Create Standard ZIP file
        working-directory: ./output
        run: |
          Compress-Archive -Path ./*.exe, ./*.dll, ./version.txt -DestinationPath PD3AudioModder.zip -Force


      - name: Debug Directory Structure
        working-directory: .
        run: dir /s /b

      - name: Create NSIS Installer
        run: |
          & "C:\Program Files (x86)\NSIS\makensis.exe" install.nsi

      - name: Create Installer ZIP
        working-directory: build
        run: |
          if (!(Test-Path "install.nsi")) { Write-Error "install.nsi not found!"; exit 1 }
          & "C:\Program Files (x86)\NSIS\makensis.exe" install.nsi

      - name: Upload Application Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PD3AudioModder-exe
          path: ./output/PD3AudioModder.zip

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PD3AudioModder-Installer
          path: ./Installer-PD3AudioModder.zip

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./output/PD3AudioModder.zip
            ./Installer-PD3AudioModder.zip

      - name: Update version.txt
        run: |
          echo "${{ github.event.release.tag_name }}" > version.txt
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add version.txt
          git commit -m "Update version.txt for release ${{ github.event.release.tag_name }}"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
